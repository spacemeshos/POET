// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SubmitRequest struct {
	Challenge            []byte   `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRequest) Reset()         { *m = SubmitRequest{} }
func (m *SubmitRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitRequest) ProtoMessage()    {}
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{0}
}
func (m *SubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRequest.Unmarshal(m, b)
}
func (m *SubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRequest.Merge(dst, src)
}
func (m *SubmitRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitRequest.Size(m)
}
func (m *SubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRequest proto.InternalMessageInfo

func (m *SubmitRequest) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

type SubmitResponse struct {
	RoundId              int32    `protobuf:"varint,1,opt,name=roundId,proto3" json:"roundId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitResponse) Reset()         { *m = SubmitResponse{} }
func (m *SubmitResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitResponse) ProtoMessage()    {}
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{1}
}
func (m *SubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitResponse.Unmarshal(m, b)
}
func (m *SubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitResponse.Merge(dst, src)
}
func (m *SubmitResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitResponse.Size(m)
}
func (m *SubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitResponse proto.InternalMessageInfo

func (m *SubmitResponse) GetRoundId() int32 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

type GetMembershipProofRequest struct {
	RoundId              int32    `protobuf:"varint,1,opt,name=roundId,proto3" json:"roundId,omitempty"`
	Challenge            []byte   `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Wait                 bool     `protobuf:"varint,3,opt,name=wait,proto3" json:"wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMembershipProofRequest) Reset()         { *m = GetMembershipProofRequest{} }
func (m *GetMembershipProofRequest) String() string { return proto.CompactTextString(m) }
func (*GetMembershipProofRequest) ProtoMessage()    {}
func (*GetMembershipProofRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{2}
}
func (m *GetMembershipProofRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMembershipProofRequest.Unmarshal(m, b)
}
func (m *GetMembershipProofRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMembershipProofRequest.Marshal(b, m, deterministic)
}
func (dst *GetMembershipProofRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembershipProofRequest.Merge(dst, src)
}
func (m *GetMembershipProofRequest) XXX_Size() int {
	return xxx_messageInfo_GetMembershipProofRequest.Size(m)
}
func (m *GetMembershipProofRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembershipProofRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembershipProofRequest proto.InternalMessageInfo

func (m *GetMembershipProofRequest) GetRoundId() int32 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

func (m *GetMembershipProofRequest) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *GetMembershipProofRequest) GetWait() bool {
	if m != nil {
		return m.Wait
	}
	return false
}

type GetMembershipProofResponse struct {
	Mproof               *MembershipProof `protobuf:"bytes,1,opt,name=mproof,proto3" json:"mproof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetMembershipProofResponse) Reset()         { *m = GetMembershipProofResponse{} }
func (m *GetMembershipProofResponse) String() string { return proto.CompactTextString(m) }
func (*GetMembershipProofResponse) ProtoMessage()    {}
func (*GetMembershipProofResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{3}
}
func (m *GetMembershipProofResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMembershipProofResponse.Unmarshal(m, b)
}
func (m *GetMembershipProofResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMembershipProofResponse.Marshal(b, m, deterministic)
}
func (dst *GetMembershipProofResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembershipProofResponse.Merge(dst, src)
}
func (m *GetMembershipProofResponse) XXX_Size() int {
	return xxx_messageInfo_GetMembershipProofResponse.Size(m)
}
func (m *GetMembershipProofResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembershipProofResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembershipProofResponse proto.InternalMessageInfo

func (m *GetMembershipProofResponse) GetMproof() *MembershipProof {
	if m != nil {
		return m.Mproof
	}
	return nil
}

type GetProofRequest struct {
	RoundId              int32    `protobuf:"varint,1,opt,name=roundId,proto3" json:"roundId,omitempty"`
	Wait                 bool     `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProofRequest) Reset()         { *m = GetProofRequest{} }
func (m *GetProofRequest) String() string { return proto.CompactTextString(m) }
func (*GetProofRequest) ProtoMessage()    {}
func (*GetProofRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{4}
}
func (m *GetProofRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProofRequest.Unmarshal(m, b)
}
func (m *GetProofRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProofRequest.Marshal(b, m, deterministic)
}
func (dst *GetProofRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProofRequest.Merge(dst, src)
}
func (m *GetProofRequest) XXX_Size() int {
	return xxx_messageInfo_GetProofRequest.Size(m)
}
func (m *GetProofRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProofRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProofRequest proto.InternalMessageInfo

func (m *GetProofRequest) GetRoundId() int32 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

func (m *GetProofRequest) GetWait() bool {
	if m != nil {
		return m.Wait
	}
	return false
}

type GetProofResponse struct {
	N                    int32      `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	Commitment           []byte     `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	Proof                *PoetProof `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetProofResponse) Reset()         { *m = GetProofResponse{} }
func (m *GetProofResponse) String() string { return proto.CompactTextString(m) }
func (*GetProofResponse) ProtoMessage()    {}
func (*GetProofResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{5}
}
func (m *GetProofResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProofResponse.Unmarshal(m, b)
}
func (m *GetProofResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProofResponse.Marshal(b, m, deterministic)
}
func (dst *GetProofResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProofResponse.Merge(dst, src)
}
func (m *GetProofResponse) XXX_Size() int {
	return xxx_messageInfo_GetProofResponse.Size(m)
}
func (m *GetProofResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProofResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProofResponse proto.InternalMessageInfo

func (m *GetProofResponse) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *GetProofResponse) GetCommitment() []byte {
	if m != nil {
		return m.Commitment
	}
	return nil
}

func (m *GetProofResponse) GetProof() *PoetProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{6}
}
func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(dst, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type GetRoundInfoResponse struct {
	Opened               int64      `protobuf:"varint,1,opt,name=opened,proto3" json:"opened,omitempty"`
	ExecuteStart         int64      `protobuf:"varint,2,opt,name=executeStart,proto3" json:"executeStart,omitempty"`
	ExecuteEnd           int64      `protobuf:"varint,3,opt,name=executeEnd,proto3" json:"executeEnd,omitempty"`
	ChallengesCount      int32      `protobuf:"varint,4,opt,name=challengesCount,proto3" json:"challengesCount,omitempty"`
	MerkleRoot           []byte     `protobuf:"bytes,5,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	Proof                *PoetProof `protobuf:"bytes,6,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetRoundInfoResponse) Reset()         { *m = GetRoundInfoResponse{} }
func (m *GetRoundInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetRoundInfoResponse) ProtoMessage()    {}
func (*GetRoundInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{7}
}
func (m *GetRoundInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoundInfoResponse.Unmarshal(m, b)
}
func (m *GetRoundInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoundInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetRoundInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoundInfoResponse.Merge(dst, src)
}
func (m *GetRoundInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetRoundInfoResponse.Size(m)
}
func (m *GetRoundInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoundInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoundInfoResponse proto.InternalMessageInfo

func (m *GetRoundInfoResponse) GetOpened() int64 {
	if m != nil {
		return m.Opened
	}
	return 0
}

func (m *GetRoundInfoResponse) GetExecuteStart() int64 {
	if m != nil {
		return m.ExecuteStart
	}
	return 0
}

func (m *GetRoundInfoResponse) GetExecuteEnd() int64 {
	if m != nil {
		return m.ExecuteEnd
	}
	return 0
}

func (m *GetRoundInfoResponse) GetChallengesCount() int32 {
	if m != nil {
		return m.ChallengesCount
	}
	return 0
}

func (m *GetRoundInfoResponse) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *GetRoundInfoResponse) GetProof() *PoetProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type GetRoundInfoRequest struct {
	RoundId              int32    `protobuf:"varint,1,opt,name=roundId,proto3" json:"roundId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoundInfoRequest) Reset()         { *m = GetRoundInfoRequest{} }
func (m *GetRoundInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoundInfoRequest) ProtoMessage()    {}
func (*GetRoundInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{8}
}
func (m *GetRoundInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoundInfoRequest.Unmarshal(m, b)
}
func (m *GetRoundInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoundInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetRoundInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoundInfoRequest.Merge(dst, src)
}
func (m *GetRoundInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoundInfoRequest.Size(m)
}
func (m *GetRoundInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoundInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoundInfoRequest proto.InternalMessageInfo

func (m *GetRoundInfoRequest) GetRoundId() int32 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

type GetInfoResponse struct {
	OpenRoundId          int32    `protobuf:"varint,1,opt,name=openRoundId,proto3" json:"openRoundId,omitempty"`
	ExecutingRoundsIds   []int32  `protobuf:"varint,2,rep,packed,name=executingRoundsIds,proto3" json:"executingRoundsIds,omitempty"`
	ExecutedRoundsIds    []int32  `protobuf:"varint,3,rep,packed,name=executedRoundsIds,proto3" json:"executedRoundsIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{9}
}
func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(dst, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetOpenRoundId() int32 {
	if m != nil {
		return m.OpenRoundId
	}
	return 0
}

func (m *GetInfoResponse) GetExecutingRoundsIds() []int32 {
	if m != nil {
		return m.ExecutingRoundsIds
	}
	return nil
}

func (m *GetInfoResponse) GetExecutedRoundsIds() []int32 {
	if m != nil {
		return m.ExecutedRoundsIds
	}
	return nil
}

type MembershipProof struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Root                 []byte   `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Proof                [][]byte `protobuf:"bytes,3,rep,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MembershipProof) Reset()         { *m = MembershipProof{} }
func (m *MembershipProof) String() string { return proto.CompactTextString(m) }
func (*MembershipProof) ProtoMessage()    {}
func (*MembershipProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{10}
}
func (m *MembershipProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipProof.Unmarshal(m, b)
}
func (m *MembershipProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipProof.Marshal(b, m, deterministic)
}
func (dst *MembershipProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipProof.Merge(dst, src)
}
func (m *MembershipProof) XXX_Size() int {
	return xxx_messageInfo_MembershipProof.Size(m)
}
func (m *MembershipProof) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipProof.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipProof proto.InternalMessageInfo

func (m *MembershipProof) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MembershipProof) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *MembershipProof) GetProof() [][]byte {
	if m != nil {
		return m.Proof
	}
	return nil
}

type PoetProof struct {
	Phi                  []byte    `protobuf:"bytes,1,opt,name=phi,proto3" json:"phi,omitempty"`
	L                    []*Labels `protobuf:"bytes,2,rep,name=l,proto3" json:"l,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PoetProof) Reset()         { *m = PoetProof{} }
func (m *PoetProof) String() string { return proto.CompactTextString(m) }
func (*PoetProof) ProtoMessage()    {}
func (*PoetProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{11}
}
func (m *PoetProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PoetProof.Unmarshal(m, b)
}
func (m *PoetProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PoetProof.Marshal(b, m, deterministic)
}
func (dst *PoetProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PoetProof.Merge(dst, src)
}
func (m *PoetProof) XXX_Size() int {
	return xxx_messageInfo_PoetProof.Size(m)
}
func (m *PoetProof) XXX_DiscardUnknown() {
	xxx_messageInfo_PoetProof.DiscardUnknown(m)
}

var xxx_messageInfo_PoetProof proto.InternalMessageInfo

func (m *PoetProof) GetPhi() []byte {
	if m != nil {
		return m.Phi
	}
	return nil
}

func (m *PoetProof) GetL() []*Labels {
	if m != nil {
		return m.L
	}
	return nil
}

type Labels struct {
	Labels               [][]byte `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Labels) Reset()         { *m = Labels{} }
func (m *Labels) String() string { return proto.CompactTextString(m) }
func (*Labels) ProtoMessage()    {}
func (*Labels) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_9b129968cae971f3, []int{12}
}
func (m *Labels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labels.Unmarshal(m, b)
}
func (m *Labels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labels.Marshal(b, m, deterministic)
}
func (dst *Labels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labels.Merge(dst, src)
}
func (m *Labels) XXX_Size() int {
	return xxx_messageInfo_Labels.Size(m)
}
func (m *Labels) XXX_DiscardUnknown() {
	xxx_messageInfo_Labels.DiscardUnknown(m)
}

var xxx_messageInfo_Labels proto.InternalMessageInfo

func (m *Labels) GetLabels() [][]byte {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*SubmitRequest)(nil), "api.SubmitRequest")
	proto.RegisterType((*SubmitResponse)(nil), "api.SubmitResponse")
	proto.RegisterType((*GetMembershipProofRequest)(nil), "api.GetMembershipProofRequest")
	proto.RegisterType((*GetMembershipProofResponse)(nil), "api.GetMembershipProofResponse")
	proto.RegisterType((*GetProofRequest)(nil), "api.GetProofRequest")
	proto.RegisterType((*GetProofResponse)(nil), "api.GetProofResponse")
	proto.RegisterType((*GetInfoRequest)(nil), "api.GetInfoRequest")
	proto.RegisterType((*GetRoundInfoResponse)(nil), "api.GetRoundInfoResponse")
	proto.RegisterType((*GetRoundInfoRequest)(nil), "api.GetRoundInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "api.GetInfoResponse")
	proto.RegisterType((*MembershipProof)(nil), "api.MembershipProof")
	proto.RegisterType((*PoetProof)(nil), "api.PoetProof")
	proto.RegisterType((*Labels)(nil), "api.Labels")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PoetClient is the client API for Poet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoetClient interface {
	Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error)
	GetMembershipProof(ctx context.Context, in *GetMembershipProofRequest, opts ...grpc.CallOption) (*GetMembershipProofResponse, error)
	GetProof(ctx context.Context, in *GetProofRequest, opts ...grpc.CallOption) (*GetProofResponse, error)
	GetRoundInfo(ctx context.Context, in *GetRoundInfoRequest, opts ...grpc.CallOption) (*GetRoundInfoResponse, error)
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
}

type poetClient struct {
	cc *grpc.ClientConn
}

func NewPoetClient(cc *grpc.ClientConn) PoetClient {
	return &poetClient{cc}
}

func (c *poetClient) Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error) {
	out := new(SubmitResponse)
	err := c.cc.Invoke(ctx, "/api.Poet/Submit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poetClient) GetMembershipProof(ctx context.Context, in *GetMembershipProofRequest, opts ...grpc.CallOption) (*GetMembershipProofResponse, error) {
	out := new(GetMembershipProofResponse)
	err := c.cc.Invoke(ctx, "/api.Poet/GetMembershipProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poetClient) GetProof(ctx context.Context, in *GetProofRequest, opts ...grpc.CallOption) (*GetProofResponse, error) {
	out := new(GetProofResponse)
	err := c.cc.Invoke(ctx, "/api.Poet/GetProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poetClient) GetRoundInfo(ctx context.Context, in *GetRoundInfoRequest, opts ...grpc.CallOption) (*GetRoundInfoResponse, error) {
	out := new(GetRoundInfoResponse)
	err := c.cc.Invoke(ctx, "/api.Poet/GetRoundInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poetClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/api.Poet/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoetServer is the server API for Poet service.
type PoetServer interface {
	Submit(context.Context, *SubmitRequest) (*SubmitResponse, error)
	GetMembershipProof(context.Context, *GetMembershipProofRequest) (*GetMembershipProofResponse, error)
	GetProof(context.Context, *GetProofRequest) (*GetProofResponse, error)
	GetRoundInfo(context.Context, *GetRoundInfoRequest) (*GetRoundInfoResponse, error)
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
}

func RegisterPoetServer(s *grpc.Server, srv PoetServer) {
	s.RegisterService(&_Poet_serviceDesc, srv)
}

func _Poet_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoetServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Poet/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoetServer).Submit(ctx, req.(*SubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poet_GetMembershipProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMembershipProofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoetServer).GetMembershipProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Poet/GetMembershipProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoetServer).GetMembershipProof(ctx, req.(*GetMembershipProofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poet_GetProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoetServer).GetProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Poet/GetProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoetServer).GetProof(ctx, req.(*GetProofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poet_GetRoundInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoundInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoetServer).GetRoundInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Poet/GetRoundInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoetServer).GetRoundInfo(ctx, req.(*GetRoundInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poet_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoetServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Poet/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoetServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Poet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Poet",
	HandlerType: (*PoetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Submit",
			Handler:    _Poet_Submit_Handler,
		},
		{
			MethodName: "GetMembershipProof",
			Handler:    _Poet_GetMembershipProof_Handler,
		},
		{
			MethodName: "GetProof",
			Handler:    _Poet_GetProof_Handler,
		},
		{
			MethodName: "GetRoundInfo",
			Handler:    _Poet_GetRoundInfo_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _Poet_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_9b129968cae971f3) }

var fileDescriptor_api_9b129968cae971f3 = []byte{
	// 676 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0x95, 0xe3, 0x26, 0x6d, 0x27, 0xb9, 0x4d, 0xee, 0x24, 0xbd, 0xd7, 0xc9, 0xad, 0xda, 0x68,
	0x75, 0x1f, 0xa2, 0xaa, 0xd4, 0xa2, 0xbc, 0x20, 0x5e, 0x78, 0x40, 0x10, 0x8a, 0x40, 0x2a, 0x2e,
	0x3f, 0xe0, 0xd4, 0x9b, 0xd4, 0xc2, 0xde, 0x35, 0xf6, 0x06, 0x2a, 0x55, 0x15, 0x12, 0x7f, 0x80,
	0xf8, 0x34, 0xc4, 0x0f, 0x20, 0x3e, 0x04, 0xed, 0x78, 0xdd, 0xd8, 0x6e, 0x0b, 0xbc, 0xed, 0x9c,
	0x19, 0x9f, 0x73, 0x66, 0x76, 0x36, 0x81, 0x4d, 0x3f, 0x09, 0x0f, 0x93, 0x54, 0x2a, 0x89, 0xb6,
	0x9f, 0x84, 0xa3, 0x9d, 0x85, 0x94, 0x8b, 0x88, 0xbb, 0x7e, 0x12, 0xba, 0xbe, 0x10, 0x52, 0xf9,
	0x2a, 0x94, 0x22, 0xcb, 0x4b, 0xd8, 0x3d, 0xf8, 0xeb, 0x74, 0x39, 0x8b, 0x43, 0xe5, 0xf1, 0x77,
	0x4b, 0x9e, 0x29, 0xdc, 0x81, 0xcd, 0xb3, 0x73, 0x3f, 0x8a, 0xb8, 0x58, 0x70, 0xc7, 0x1a, 0x5b,
	0x93, 0x8e, 0xb7, 0x02, 0xd8, 0x3e, 0x6c, 0x15, 0xe5, 0x59, 0x22, 0x45, 0xc6, 0xd1, 0x81, 0xf5,
	0x54, 0x2e, 0x45, 0x70, 0x1c, 0x50, 0x75, 0xd3, 0x2b, 0x42, 0xb6, 0x80, 0xe1, 0x94, 0xab, 0x57,
	0x3c, 0x9e, 0xf1, 0x34, 0x3b, 0x0f, 0x93, 0x93, 0x54, 0xca, 0x79, 0x21, 0x73, 0xe7, 0x67, 0x55,
	0x03, 0x8d, 0x9a, 0x01, 0x44, 0x58, 0xfb, 0xe0, 0x87, 0xca, 0xb1, 0xc7, 0xd6, 0x64, 0xc3, 0xa3,
	0x33, 0x7b, 0x01, 0xa3, 0xdb, 0x84, 0x8c, 0xc1, 0x03, 0x68, 0xc5, 0x89, 0x46, 0x48, 0xa8, 0x7d,
	0x34, 0x38, 0xd4, 0x03, 0xaa, 0x57, 0x9b, 0x1a, 0xf6, 0x18, 0xba, 0x53, 0xae, 0xfe, 0xd0, 0x6a,
	0x61, 0xa6, 0x51, 0x32, 0x33, 0x87, 0xde, 0x8a, 0xc0, 0x58, 0xe8, 0x80, 0x25, 0xcc, 0xb7, 0x96,
	0xc0, 0x5d, 0x80, 0x33, 0x19, 0xc7, 0xa1, 0x8a, 0xb9, 0x50, 0xa6, 0xc3, 0x12, 0x82, 0xff, 0x43,
	0x33, 0xf7, 0x6b, 0x93, 0xdf, 0x2d, 0xf2, 0x7b, 0x22, 0x0b, 0xd2, 0x3c, 0xc9, 0x7a, 0xb0, 0x35,
	0xe5, 0xea, 0x58, 0xcc, 0xa5, 0xf1, 0xc9, 0xbe, 0x5b, 0x30, 0x98, 0x72, 0xe5, 0x91, 0x39, 0xc2,
	0x8d, 0xfc, 0x3f, 0xd0, 0x92, 0x09, 0x17, 0x3c, 0xf7, 0x6f, 0x7b, 0x26, 0x42, 0x06, 0x1d, 0x7e,
	0xc1, 0xcf, 0x96, 0x8a, 0x9f, 0x2a, 0x3f, 0xcd, 0xad, 0xd8, 0x5e, 0x05, 0xd3, 0x66, 0x4d, 0xfc,
	0x54, 0x04, 0xe4, 0xc8, 0xf6, 0x4a, 0x08, 0x4e, 0xa0, 0x7b, 0x7d, 0x39, 0xd9, 0x13, 0xb9, 0x14,
	0xca, 0x59, 0xa3, 0x46, 0xeb, 0xb0, 0x66, 0x8a, 0x79, 0xfa, 0x36, 0xe2, 0x9e, 0x94, 0xca, 0x69,
	0xe6, 0x6d, 0xaf, 0x90, 0x55, 0xdb, 0xad, 0x5f, 0xb5, 0xed, 0x42, 0xbf, 0xda, 0xe3, 0x6f, 0xee,
	0x88, 0x7d, 0xb6, 0xe8, 0x46, 0x2b, 0x03, 0x19, 0x43, 0x5b, 0x8f, 0xc0, 0xab, 0x7c, 0x51, 0x86,
	0xf0, 0x10, 0x30, 0x6f, 0x32, 0x14, 0x0b, 0xc2, 0xb2, 0xe3, 0x20, 0x73, 0x1a, 0x63, 0x7b, 0xd2,
	0xf4, 0x6e, 0xc9, 0xe0, 0x01, 0xfc, 0x6d, 0x86, 0x12, 0xac, 0xca, 0x6d, 0x2a, 0xbf, 0x99, 0x60,
	0xaf, 0xa1, 0x5b, 0xdb, 0x3f, 0x1c, 0x40, 0x33, 0x14, 0x01, 0xbf, 0x30, 0x66, 0xf2, 0x40, 0x2f,
	0x58, 0xaa, 0xa7, 0x95, 0x2f, 0x09, 0x9d, 0x75, 0x65, 0xb1, 0x1e, 0xf6, 0xa4, 0x53, 0xcc, 0xe5,
	0x21, 0x6c, 0x5e, 0xcf, 0x0a, 0x7b, 0x60, 0x27, 0xe7, 0xa1, 0x79, 0xbd, 0xfa, 0x88, 0x43, 0xb0,
	0x22, 0xb2, 0xdf, 0x3e, 0x6a, 0xd3, 0x60, 0x5f, 0xfa, 0x33, 0x1e, 0x65, 0x9e, 0x15, 0xb1, 0x31,
	0xb4, 0xf2, 0x40, 0xef, 0x49, 0x44, 0x27, 0xc7, 0x22, 0x6a, 0x13, 0x1d, 0x7d, 0xb3, 0x61, 0x4d,
	0x93, 0xe3, 0x73, 0x68, 0xe5, 0xaf, 0x1f, 0x91, 0x48, 0x2a, 0xbf, 0x1c, 0xa3, 0x7e, 0x05, 0xcb,
	0x47, 0xcd, 0xb6, 0x3f, 0x7d, 0xfd, 0xf1, 0xa5, 0xd1, 0x65, 0xe0, 0xbe, 0xbf, 0xef, 0x66, 0x94,
	0x7b, 0x64, 0xed, 0xe3, 0x47, 0xc0, 0x9b, 0x4f, 0x16, 0x77, 0x89, 0xe1, 0xce, 0x1f, 0x8d, 0xd1,
	0xde, 0x9d, 0x79, 0xa3, 0x36, 0x21, 0x35, 0x86, 0x63, 0xad, 0x96, 0xbf, 0x68, 0xf7, 0xd2, 0x6c,
	0xc2, 0x95, 0x7b, 0x79, 0xbd, 0x92, 0x57, 0xf8, 0x06, 0x36, 0x8a, 0x67, 0x8a, 0x83, 0x82, 0xb6,
	0x22, 0xb6, 0x5d, 0x43, 0x8d, 0xc4, 0x7f, 0x24, 0xb1, 0x8d, 0x7d, 0x2d, 0x51, 0x53, 0xc0, 0x00,
	0x3a, 0xe5, 0xed, 0x44, 0xa7, 0xe0, 0xa8, 0x2f, 0xec, 0x68, 0x78, 0x4b, 0xc6, 0x28, 0xec, 0x91,
	0xc2, 0x10, 0xff, 0xd5, 0x0a, 0x44, 0x1d, 0x8a, 0xb9, 0x2c, 0xa9, 0x3c, 0x83, 0x75, 0xb3, 0xd1,
	0xd8, 0x2f, 0x68, 0xca, 0xdc, 0x83, 0x2a, 0x68, 0x68, 0x7b, 0x44, 0x0b, 0xb8, 0xa1, 0x69, 0x35,
	0xe3, 0xac, 0x45, 0x7f, 0x01, 0x0f, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x3f, 0xf0, 0xa9,
	0x32, 0x06, 0x00, 0x00,
}
