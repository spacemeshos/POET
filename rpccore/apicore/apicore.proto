syntax = "proto3";

import "google/api/annotations.proto";

package apicore;

service PoetCoreProver {
    rpc Compute (ComputeRequest) returns (ComputeResponse) {
        option (google.api.http) = {
            get: "/v1/prover/compute"
        };
    }

    rpc GetNIP (GetNIPRequest) returns (GetNIPResponse) {
        option (google.api.http) = {
            get: "/v1/prover/getnip"
        };
    }

    rpc Shutdown (ShutdownRequest) returns (ShutdownResponse) {
        option (google.api.http) = {
            get: "/v1/prover/shutdown"
        };
    }
}

service PoetVerifier {
    rpc VerifyNIP (VerifyNIPRequest) returns (VerifyNIPResponse) {
        option (google.api.http) = {
            get: "/v1/verifier/verifynip"
        };
    }
}

message ComputeRequest {
    DagParams d = 1 [json_name = "d"];
}

message ComputeResponse {
    bytes phi = 1 [json_name = "phi"];
}

message GetNIPRequest {
}

message GetNIPResponse {
    Proof proof = 1 [json_name = "proof"];
}

message ShutdownRequest {
}

message ShutdownResponse {
}

message VerifyNIPRequest {
    DagParams d = 1 [json_name = "d"];
    Proof p = 2 [json_name = "p"];
}

message VerifyNIPResponse {
    bool verified = 1 [json_name = "verified"];
}

message DagParams {
    bytes x = 1 [json_name = "x"];
    uint32 n = 2 [json_name = "n"];
}

message Proof {
    bytes phi = 1 [json_name = "phi"];
    repeated bytes provenLeaves = 2 [json_name = "proven_leaves"];
    repeated bytes proofNodes = 3 [json_name = "proof_nodes"];
}
